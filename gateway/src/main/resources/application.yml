spring:
  application:
    name: gateway
  cloud:
    gateway:
      routes:
        - id: service
          uri: lb://service
          predicates:
            - Path=/service/**
          filters:
            - StripPrefix=1
            - TokenRelay=
        - id: resource
          uri: lb://resource
          predicates:
            - Path=/resource/**
          filters:
            - StripPrefix=1
            - TokenRelay
  security:
    oauth2:
      client:
        registration:
          gateway:
            provider: uaa
            client-id: ${CLIENT_ID:gateway}
            client-secret: ${CLIENT_SECRET:gatewaysecret}
            authorization-grant-type: authorization_code
            scope: openid,profile,email,resource.read,resource.write
            #redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}" # only required if not using issuer-uri in provider
        provider:
          uaa:
            issuer-uri: ${ISSUER_URI:http://localhost:8080/oauth/token}

#            authorization-uri: http://localhost:8080/oauth/authorize
#            token-uri: http://localhost:8080/oauth/token
#            user-info-uri: http://localhost:8080/userinfo
#            jwk-set-uri: http://localhost:8080/token_keys
#            user-name-attribute: sub
server:
  port: ${PORT:0}

eureka:
  client:
    serviceUrl:
      defaultZone: ${EUREKA_URI:http://localhost:8761/eureka}
    registry-fetch-interval-seconds: 5
  instance:
    preferIpAddress: true
